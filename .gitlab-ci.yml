image: python:3.10-slim

stages:
  - Static Analysis
  - Test
  # Separate FP and model generate stages, so the FP job isn't
  # overwhelmed by the 3D model (manual) jobs.
  - Footprint Generate
  - 3D Generate

fp-formatting:
  stage: Static Analysis
  needs: []
  only:
    refs:
      - merge_requests
  before_script:
    - python --version
    - python -m pip install --upgrade pip
    - pip install .[dev]
  script:
    - ./manage.sh fp_format_check

fp-test:
  stage: Test
  needs: []
  only:
    refs:
      - merge_requests
    changes:
    - KicadModTree/**
    - scripts/**
  before_script:
    - python --version
    - python -m pip install --upgrade pip
    - pip install '.[dev]'
  script:
    - python -m pytest --junitxml=report.xml
  artifacts:
    when: always
    reports:
      junit: report.xml

fp-generate:
  stage: Footprint Generate
  needs: []
  only:
    refs:
      - master
  image: python:3.10  # some scripts require more recent Python features
  before_script:
    - python --version
    - python -m pip install --upgrade pip
    - pip install .
  script:
    # Generate footprints
    - cd scripts
    - ls -lah
    - ./generate.sh
    # Collect generated footprints into artifact archive
    - cd "$CI_PROJECT_DIR"
    - gitlabci/collect_generated_footprints.sh
    - mv generated_footprints/ footprints/
    - tar -cJf footprints.tar.xz footprints/
  artifacts:
    paths:
      - footprints.tar.xz
    when: always

fp-generate-and-compare:
  stage: Test
  needs: []
  only:
    refs:
      - merge_requests
  allow_failure: true
  image: kicad/kicad:8.0
  before_script:
    # Required when using kicad Docker image (kicad-cli needed for visu diff):
    - sudo apt update -qq
    - sudo apt install curl python3 python3-pip -qqy --no-install-recommends
    - sudo ln -s /usr/bin/python3 /usr/bin/python
    - python --version
    - python -m pip install --break-system-packages --upgrade pip
    - pip install --break-system-packages .
  script:
    # Download and extract base footprints generated by base branch (artifact)
    - BASE_FP_URL="$CI_API_V4_URL/projects/$CI_MERGE_REQUEST_PROJECT_ID/jobs/artifacts/$CI_MERGE_REQUEST_TARGET_BRANCH_NAME/raw/footprints.tar.xz?job=fp-generate"
    - echo "Will try to download base branch footprints from $BASE_FP_URL"
    - curl -fL -o footprints.tar.xz "$BASE_FP_URL"
    - tar -xJf footprints.tar.xz
    - mv footprints/ base_footprints/
    # Generate footprints
    - cd scripts
    - ls -lah
    - ./generate.sh
    # Collect them into generated_footprints/
    - cd "$CI_PROJECT_DIR"
    - gitlabci/collect_generated_footprints.sh
    # Hack: Ensure at least an empty dir exists in base_footprints/ for each
    # dir in generated_footprints/ (otherwise html_diff.py tries to interpret
    # paths of the former as Git revisions when new footprint libs are added)
    # (=> TODO: Add CLI arg to html_diff.py to force interpretation as dir?)
    - |
      shopt -s globstar nullglob
      for dir_path in generated_footprints/**/; do
        mkdir -p "base_footprints/${dir_path#generated_footprints/}"
      done
    # Generate visual diff between base and generated (adapted from
    # kicad-library-utils/tools/gitlabci/gitlab-ci-footprints.yml)
    # (=> TODO: Refactor to extract common functionality?)
    - git clone --depth 1 https://gitlab.com/kicad/libraries/kicad-library-utils $CI_BUILDS_DIR/kicad-library-utils
    - git config --global --add safe.directory $(realpath .)
    - mkdir -p $HOME/.config/kicad/8.0/colors
    - pip install --break-system-packages pygments wsdiff jinja2
    - gitlabci/visual_diff.sh
    - mkdir diffs
    - mv *.diff diffs/
  artifacts:
    expose_as: "Visual Diff"
    paths:
      - "diffs/"
    reports:
      dotenv: deploy.env
  environment:
    name: review/$CI_COMMIT_REF_NAME
    url: $DYNAMIC_ENVIRONMENT_URL

# Include the 3d-model-generators pipelines
include: '3d-model-generators/.gitlab-ci.yml'
